{"version":3,"file":"icon.component.d.ts","sources":["../../../../../../Angular_ITHelper/AngularAuth/node_modules/@fortawesome/angular-fontawesome/icon/icon.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAuB;AAAoB;AACnC;AACA;AACA;AAAQ;AAEX;AAGa;AAAuB;AAAQ;AAAoB;AAC1D;AAEV;AACC;AACC;AACA;AACA;AACA;AACC;AACE;AACE;AACG;AACG;AACC;AAEf;AAAQ;AAGA;AAAO;AAAsB;AAAQ;AAAsB;AAGjE;AAG+D;AAAgD;AAAQ;AAEtH;AACD;AAEqB;AACP;AAAkC;AAAQ;AACxD;AAGyB;AAA+B;AAAuB;AACzD;AACJ;AACO;AACN;AACO;AACR;AACE;AAAW;AAC3B;;;AACE,AAIA","sourcesContent":["import { OnChanges, SimpleChanges } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { FaSymbol, FlipProp, IconDefinition, IconProp, PullProp, RotateProp, SizeProp, Styles, Transform } from '@fortawesome/fontawesome-svg-core';\nimport { FaConfig } from '../config';\nimport { FaIconLibrary } from '../icon-library';\nimport { FaStackItemSizeDirective } from '../stack/stack-item-size.directive';\nexport declare class FaIconComponent implements OnChanges {\n    private sanitizer;\n    private config;\n    private iconLibrary;\n    private stackItem;\n    icon: IconProp;\n    /**\n     * Specify a title for the icon.\n     * This text will be displayed in a tooltip on hover and presented to the\n     * screen readers.\n     */\n    title?: string;\n    spin?: boolean;\n    pulse?: boolean;\n    mask?: IconProp;\n    styles?: Styles;\n    flip?: FlipProp;\n    size?: SizeProp;\n    pull?: PullProp;\n    border?: boolean;\n    inverse?: boolean;\n    symbol?: FaSymbol;\n    rotate?: RotateProp;\n    fixedWidth?: boolean;\n    classes?: string[];\n    transform?: string | Transform;\n    /**\n     * Specify the `role` attribute for the rendered <svg> element.\n     *\n     * @default 'img'\n     */\n    a11yRole: string;\n    renderedIconHTML: SafeHtml;\n    constructor(sanitizer: DomSanitizer, config: FaConfig, iconLibrary: FaIconLibrary, stackItem: FaStackItemSizeDirective);\n    ngOnChanges(changes: SimpleChanges): never;\n    /**\n     * Programmatically trigger rendering of the icon.\n     *\n     * This method is useful, when creating {@link FaIconComponent} dynamically or\n     * changing its inputs programmatically as in these cases icon won't be\n     * re-rendered automatically.\n     */\n    render(): void;\n    protected findIconDefinition(i: IconProp | IconDefinition): IconDefinition | null;\n    protected buildParams(): {\n        title: string;\n        transform: Transform;\n        classes: string[];\n        mask: IconDefinition;\n        styles: Styles;\n        symbol: string | boolean;\n        attributes: {\n            role: string;\n        };\n    };\n    private renderIcon;\n}\n"]}