{"version":3,"file":"config.d.ts","sources":["../../../../../Angular_ITHelper/AngularAuth/node_modules/@fortawesome/angular-fontawesome/config.d.ts"],"names":[],"mappings":"AAAA;;AACA;AAAA;AAAQ;AAEmC;AAAO;AAAsB;AACnE;AAEE;AACA;AAEiD;AACQ;AACgB;AAAO;AAAqB;AACxG;AAGF;AAAQ;AAEA;AACmD;AAAsB;AAAQ;AAEzF;AACA;AAE0C;AACrC;AACgC;AAAO;AAEuB;AACnD;AAAO;AAE0B;AACD;AACC;AAClC;AACgC;AACH;AACJ;AACG;AACM;AAAgB;AAAO;AAG1B;AACE;AACtC;AAAO;AAAsB;AACpC;;AAGC,AACA","sourcesContent":["import { IconDefinition, IconPrefix } from '@fortawesome/fontawesome-common-types';\nexport declare class FaConfig {\n    /**\n     * Default prefix to use, when one is not provided with the icon name.\n     *\n     * @default 'fas'\n     */\n    defaultPrefix: IconPrefix;\n    /**\n     * Provides a fallback icon to use whilst main icon is being loaded asynchronously.\n     * When value is null, then fa-icon component will throw an error if icon input is missing.\n     * When value is not null, then the provided icon will be used as a fallback icon if icon input is missing.\n     *\n     * @default null\n     */\n    fallbackIcon: IconDefinition;\n    /**\n     * Set icons to the same fixed width.\n     * @see {@link: https://fontawesome.com/how-to-use/on-the-web/styling/fixed-width-icons}\n     * @default false\n     */\n    fixedWidth?: boolean;\n    /**\n     * Whether components should lookup icon definitions in the global icon\n     * library (the one available from\n     * `import { library } from '@fortawesome/fontawesome-svg-core')`.\n     *\n     * See https://github.com/FortAwesome/angular-fontawesome/blob/master/docs/usage/icon-library.md\n     * for detailed description of library modes.\n     *\n     * - 'unset' - Components should lookup icon definitions in the global library\n     * and emit warning if they find a definition there. This option is a default\n     * to assist existing applications with a migration. Applications are expected\n     * to switch to using {@link FaIconLibrary}.\n     * - true - Components should lookup icon definitions in the global library.\n     * Note that global icon library is deprecated and support for it will be\n     * removed. This option can be used to temporarily suppress warnings.\n     * - false - Components should not lookup icon definitions in the global\n     * library. Library will throw an error if missing icon is found in the global\n     * library.\n     *\n     * @deprecated This option is deprecated since 0.5.0. In 0.6.0 default will\n     * be changed to false. In 0.7.0 the option will be removed together with the\n     * support for the global icon library.\n     *\n     * @default false\n     */\n    globalLibrary: boolean | 'unset';\n}\n"]}