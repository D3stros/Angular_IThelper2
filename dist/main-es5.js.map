{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/services.service.ts","webpack:///src/app/services/services.component.ts","webpack:///src/app/services/services.component.html","webpack:///src/app/token-interceptor.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","_authService","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","_router","loggedIn","navigate","providedIn","AuthService","http","_registerUrl","_loginUrl","user","post","localStorage","getItem","removeItem","HomeComponent","faAngular","faVuejs","faReact","LoginComponent","_auth","loginUserData","email","password","loginUser","subscribe","res","setItem","token","err","console","log","RegisterComponent","registerUserData","registerUser","ServicesService","_serviceUrl","get","ServicesComponent","_serviceService","services","getServices","status","TokenInterceptorService","injector","next","authService","tokenizedReq","clone","setHeaders","Authorization","getToken","handle","environment","production","bootstrapModule","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,EAKrB;AACED,UAAI,EAAE,UADR;AAEEC,eAAS,EAAE,8EAFb;AAGEC,iBAAW,EAAE,CAAC,qDAAD;AAHf,KALqB,EAUrB;AACEF,UAAI,EAAE,OADR;AAEEC,eAAS,EAAE;AAFb,KAVqB,EAcrB;AACED,UAAI,EAAE,UADR;AAEEC,eAAS,EAAE;AAFb,KAdqB,CAAvB;;QAwBaE,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBL,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBI,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBL,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AChC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBQ;;AAKG;;AAAQ;;;;;;AAKb;;AAKG;;AAAK;;;;;;AAER;;AAKG;;AAAQ;;;;;;;;AAEX;;AAIE;AAAA;;AAAA;;AAAA,iBAAS,OAAAS,YAAA,aAAT;AAAkC,SAAlC;;AACC;;AAAM;;;;QDvCFC,Y,GAGX,sBAAmBD,YAAnB,EAA8C;AAAA;;AAA3B,WAAAA,YAAA,GAAAA,YAAA;AAFnB,WAAAE,KAAA,GAAQ,UAAR;AAEgD,K;;;uBAHrCD,Y,EAAY,0H;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,8lC;AAAA;AAAA;ACRzB;;AACE;;AAAiC;;AAAQ;;AACzC;;AASE;;AACF;;AAEA;;AACA;;AACE;;AACE;;AACE;;AAOF;;AACF;;AACA;;AACE;;AAOA;;AAOA;;AAOF;;AACF;;AACF;;AACA;;AACE;;AACF;;;;AAlCU;;AAAA;;AAUF;;AAAA;;AAOA;;AAAA;;AAQA;;AAAA;;;;;;;;;sEDrCKA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;AERzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA4CaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAZT,CACT,0DADS,EAET,sDAFS,EAGT,kEAHS,EAIT;AACEC,eAAO,EAAE,sEADX;AAEEC,gBAAQ,EAAE,mFAFZ;AAGEC,aAAK,EAAE;AAHT,OAJS,C;AASV,gBAhBQ,CACP,uEADO,EAEP,kFAFO,EAGP,0DAHO,EAIP,qEAJO,EAKP,oEALO,CAgBR;;;;0HAGUH,S,EAAS;AAAA,uBAzBlB,2DAyBkB,EAxBlB,8EAwBkB,EAvBlB,qEAuBkB,EAtBlB,8EAsBkB,EArBlB,mEAqBkB;AArBL,kBAGb,uEAHa,EAIb,kFAJa,EAKb,0DALa,EAMb,qEANa,EAOb,oEAPa;AAqBK,O;AAdF,K;;;;;sEAcPA,S,EAAS;cA3BrB,sDA2BqB;eA3BZ;AACRI,sBAAY,EAAE,CACZ,2DADY,EAEZ,8EAFY,EAGZ,qEAHY,EAIZ,8EAJY,EAKZ,mEALY,CADN;AAQRX,iBAAO,EAAE,CACP,uEADO,EAEP,kFAFO,EAGP,0DAHO,EAIP,qEAJO,EAKP,oEALO,CARD;AAeRY,mBAAS,EAAE,CACT,0DADS,EAET,sDAFS,EAGT,kEAHS,EAIT;AACEJ,mBAAO,EAAE,sEADX;AAEEC,oBAAQ,EAAE,mFAFZ;AAGEC,iBAAK,EAAE;AAHT,WAJS,CAfH;AAyBRG,mBAAS,EAAE,CAAC,2DAAD;AAzBH,S;AA2BY,Q;;;;;;;;;;;;;;;;;;AC5CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,S;AACX,yBAAoBb,YAApB,EAAuDc,OAAvD,EAAwE;AAAA;;AAApD,aAAAd,YAAA,GAAAA,YAAA;AAAmC,aAAAc,OAAA,GAAAA,OAAA;AAAmB;;;;sCAE/D;AACT,cAAI,KAAKd,YAAL,CAAkBe,QAAlB,EAAJ,EAAkC;AAChC,mBAAO,IAAP;AACD,WAFD,MAEO;AACL,iBAAKD,OAAL,CAAaE,QAAb,CAAsB,CAAC,QAAD,CAAtB;;AACA,mBAAO,KAAP;AACD;AACF;;;;;;;uBAVUH,S,EAAS,iH,EAAA,8G;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACVI,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;;;ACPtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,W;AAGX,2BAAoBC,IAApB,EAA8CL,OAA9C,EAA+D;AAAA;;AAA3C,aAAAK,IAAA,GAAAA,IAAA;AAA0B,aAAAL,OAAA,GAAAA,OAAA;AAFtC,aAAAM,YAAA,GAAe,eAAf;AACA,aAAAC,SAAA,GAAY,YAAZ;AACyD;;;;qCAEpDC,I,EAAM;AACjB,iBAAO,KAAKH,IAAL,CAAUI,IAAV,CAAoB,KAAKH,YAAzB,EAAuCE,IAAvC,CAAP;AACD;;;kCAESA,I,EAAM;AACd,iBAAO,KAAKH,IAAL,CAAUI,IAAV,CAAoB,KAAKF,SAAzB,EAAoCC,IAApC,CAAP;AACD;;;mCAEU;AACT,iBAAO,CAAC,CAACE,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAT;AACD;;;qCAEY;AACXD,sBAAY,CAACE,UAAb,CAAwB,OAAxB;;AACA,eAAKZ,OAAL,CAAaE,QAAb,CAAsB,CAAC,GAAD,CAAtB;AACD;;;mCAEU;AACT,iBAAOQ,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAP;AACD;;;;;;;uBAxBUP,W,EAAW,uH,EAAA,8G;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVD,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;;;ACPxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;QAYaU,a;AAKX,+BAAc;AAAA;;AAJd,aAAAC,SAAA,GAAY,4EAAZ;AACA,aAAAC,OAAA,GAAU,0EAAV;AACA,aAAAC,OAAA,GAAU,0EAAV;AAEgB;;;;mCAER,CAAW;;;;;;;uBAPRH,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,gd;AAAA;AAAA;ACZ1B;;AACE;;AAAsB;;AAAQ;;AAC9B;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAAoC;;AAAe;;AACrD;;AACA;;AACE;;AAKA;;AACE;;AAAG;;AAA0B;;AAAQ;;AACvC;;AACA;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAoC;;AAAa;;AACnD;;AACA;;AACE;;AAKA;;AACE;;AAAG;;AAA0B;;AAAQ;;AACvC;;AACA;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAoC;;AAAW;;AACjD;;AACA;;AACE;;AAKA;;AACE;;AAAG;;AAA0B;;AAAQ;;AACvC;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AAjDU;;AAAA,0FAAkB,QAAlB,EAAkB,qEAAlB;;AAkBA;;AAAA,wFAAgB,QAAhB,EAAgB,qEAAhB;;AAkBA;;AAAA,wFAAgB,QAAhB,EAAgB,qEAAhB;;;;;;;;;sEDvCGA,a,EAAa;cALzB,uDAKyB;eALf;AACTxB,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEZ1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa0B,c;AAMX,8BAAoBC,KAApB,EAAgDlB,OAAhD,EAAiE;AAAA;;AAA7C,aAAAkB,KAAA,GAAAA,KAAA;AAA4B,aAAAlB,OAAA,GAAAA,OAAA;AALhD,aAAAmB,aAAA,GAAgB;AACdC,eAAK,EAAE,IADO;AAEdC,kBAAQ,EAAE;AAFI,SAAhB;AAKmE;;;;mCAE3D,CAAW;;;oCAEP;AAAA;;AACV,eAAKH,KAAL,CAAWI,SAAX,CAAqB,KAAKH,aAA1B,EAAyCI,SAAzC,CACE,UAAAC,GAAG,EAAI;AACLd,wBAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BD,GAAG,CAACE,KAAlC;;AACA,iBAAI,CAAC1B,OAAL,CAAaE,QAAb,CAAsB,CAAC,WAAD,CAAtB;AACD,WAJH,EAKE,UAAAyB,GAAG;AAAA,mBAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,WALL;AAOD;;;;;;;uBAlBUV,c,EAAc,0H,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,2e;AAAA;AAAA;ACT3B;;AACE;;AACE;;AACE;;AACE;;AAAiB;;AAAK;;AACxB;;AACA;;AACE;;AACE;;AACE;;AAAc;;AAAK;;AACnB;;AACE;AAAA;AAAA;;AADF;;AAOF;;AACA;;AACE;;AAAc;;AAAQ;;AACtB;;AACE;AAAA;AAAA;;AADF;;AAOF;;AACA;;AACE;AAAA,mBAAS,IAAAK,SAAA,EAAT;AAAoB,WAApB;;AAIA;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AA5Bc;;AAAA;;AAUA;;AAAA;;;;;;;;;sEDZDL,c,EAAc;cAL1B,uDAK0B;eALhB;AACT5B,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;AET3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASauC,iB;AAKX,iCAAoBZ,KAApB,EAAgDlB,OAAhD,EAAiE;AAAA;;AAA7C,aAAAkB,KAAA,GAAAA,KAAA;AAA4B,aAAAlB,OAAA,GAAAA,OAAA;AAJhD,aAAA+B,gBAAA,GAAmB;AACjBX,eAAK,EAAE,IADU;AAEjBC,kBAAQ,EAAE;AAFO,SAAnB;AAImE;;;;mCAE3D,CAAW;;;uCAEJ;AAAA;;AACb,eAAKH,KAAL,CAAWc,YAAX,CAAwB,KAAKD,gBAA7B,EAA+CR,SAA/C,CACE,UAAAC,GAAG,EAAI;AACLd,wBAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BD,GAAG,CAACE,KAAlC;;AACA,kBAAI,CAAC1B,OAAL,CAAaE,QAAb,CAAsB,CAAC,WAAD,CAAtB;AACD,WAJH,EAKE,UAAAyB,GAAG;AAAA,mBAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,WALL;AAOD;;;;;;;uBAjBUG,iB,EAAiB,0H,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,2e;AAAA;AAAA;ACT9B;;AACE;;AACE;;AACE;;AACE;;AAAiB;;AAAQ;;AAC3B;;AACA;;AACE;;AACE;;AACE;;AAAc;;AAAK;;AACnB;;AACE;AAAA;AAAA;;AADF;;AAOF;;AACA;;AACE;;AAAc;;AAAQ;;AACtB;;AACE;AAAA;AAAA;;AADF;;AAOF;;AACA;;AACE;AAAA,mBAAS,IAAAE,YAAA,EAAT;AAAuB,WAAvB;;AAIA;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AA5Bc;;AAAA;;AAUA;;AAAA;;;;;;;;;sEDZDF,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTzC,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;AET9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMa0C,e;AAGX,+BAAoB5B,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAFZ,aAAA6B,WAAA,GAAc,eAAd;AAEgC;;;;sCAE1B;AACZ,iBAAO,KAAK7B,IAAL,CAAU8B,GAAV,CAAmB,KAAKD,WAAxB,CAAP;AACD;;;;;;;uBAPUD,e,EAAe,uH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACV9B,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACN5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;AACE;;AACE;;AACE;;AAAuB;;AAAkB;;AACzC;;AAAqB;;AAAyB;;AAC9C;;AAAoC;;AAAW;;AACjD;;AACF;;AACF;;;;;;AAL6B;;AAAA;;AACF;;AAAA;;;;QDKhBiC,iB;AAGX,iCACUC,eADV,EAEUrC,OAFV,EAEyB;AAAA;;AADf,aAAAqC,eAAA,GAAAA,eAAA;AACA,aAAArC,OAAA,GAAAA,OAAA;AAJV,aAAAsC,QAAA,GAAW,EAAX;AAKI;;;;mCAEO;AAAA;;AACT,eAAKD,eAAL,CAAqBE,WAArB,GAAmChB,SAAnC,CACE,UAAAC,GAAG;AAAA,mBAAK,MAAI,CAACc,QAAL,GAAgBd,GAArB;AAAA,WADL,EAEE,UAAAG,GAAG,EAAI;AACL,gBAAIA,GAAG,YAAY,sEAAnB,EAAsC;AACpC,kBAAIA,GAAG,CAACa,MAAJ,KAAe,GAAnB,EAAwB;AACtB,sBAAI,CAACxC,OAAL,CAAaE,QAAb,CAAsB,CAAC,QAAD,CAAtB;AACD;AACF;AACF,WARH;AAUD;;;;;;;uBAnBUkC,iB,EAAiB,kI,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA,yO;AAAA;AAAA;ACV9B;;AACE;;AASF;;;;AAT6B;;AAAA;;;;;;;;;sEDShBA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT/C,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOakD,uB;AACX,uCAAoBC,QAApB,EAAwC;AAAA;;AAApB,aAAAA,QAAA,GAAAA,QAAA;AAAsB;;;;kCAEhC1E,G,EAAK2E,I,EAAM;AACnB,cAAIC,WAAW,GAAG,KAAKF,QAAL,CAAcP,GAAd,CAAkB,yDAAlB,CAAlB;AACA,cAAIU,YAAY,GAAG7E,GAAG,CAAC8E,KAAJ,CAAU;AAC3BC,sBAAU,EAAE;AACVC,2BAAa,mBAAYJ,WAAW,CAACK,QAAZ,EAAZ;AADH;AADe,WAAV,CAAnB;AAKA,iBAAON,IAAI,CAACO,MAAL,CAAYL,YAAZ,CAAP;AACD;;;;;;;uBAXUJ,uB,EAAuB,8G;AAAA,K;;;aAAvBA,uB;AAAuB,eAAvBA,uBAAuB,K;AAAA,kBAFtB;;;;;sEAEDA,uB,EAAuB;cAHnC,wDAGmC;eAHxB;AACVtC,oBAAU,EAAE;AADF,S;AAGwB,Q;;;;;;;;;;;;;;;;;;;;;;ACPpC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMgD,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAA1B,GAAG;AAAA,aAAIC,OAAO,CAAC0B,KAAR,CAAc3B,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { ServicesComponent } from \"./services/services.component\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\nimport { AuthGuard } from \"./auth.guard\";\r\nimport { HomeComponent } from \"./home/home.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: \"services\",\r\n    component: ServicesComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: \"login\",\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: \"register\",\r\n    component: RegisterComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from \"@angular/core\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"]\r\n})\r\nexport class AppComponent {\r\n  title = \"ITHelper\";\r\n\r\n  constructor(public _authService: AuthService) {}\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <a class=\"navbar-brand\" href=\"#\">ITHelper</a>\r\n  <button\r\n    class=\"navbar-toggler\"\r\n    type=\"button\"\r\n    data-toggle=\"collapse\"\r\n    data-target=\"#navbarSupportedContent\"\r\n    aria-controls=\"navbarSupportedContent\"\r\n    aria-expanded=\"false\"\r\n    aria-label=\"Toggle navigation\"\r\n  >\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <router-outlet></router-outlet>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\">\r\n        <a\r\n          class=\"nav-link\"\r\n          *ngIf=\"_authService.loggedIn()\"\r\n          routerLink=\"/services\"\r\n          routerLinkActive=\"active\"\r\n          >Services</a\r\n        >\r\n      </li>\r\n    </ul>\r\n    <ul class=\"navbar-nav\">\r\n      <a\r\n        class=\"nav-link\"\r\n        *ngIf=\"!_authService.loggedIn()\"\r\n        routerLink=\"/login\"\r\n        routerLinkActive=\"active\"\r\n        >Login</a\r\n      >\r\n      <a\r\n        class=\"nav-link\"\r\n        *ngIf=\"!_authService.loggedIn()\"\r\n        routerLink=\"/register\"\r\n        routerLinkActive=\"active\"\r\n        >Register</a\r\n      >\r\n      <a\r\n        class=\"nav-link\"\r\n        style=\"cursor:pointer\"\r\n        *ngIf=\"_authService.loggedIn()\"\r\n        (click)=\"_authService.logoutUser()\"\r\n        >Logout</a\r\n      >\r\n    </ul>\r\n  </div>\r\n</nav>\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\n\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { ServicesComponent } from \"./services/services.component\";\r\nimport { AuthService } from \"./auth.service\";\r\nimport { ServicesService } from \"./services.service\";\r\nimport { AuthGuard } from \"./auth.guard\";\r\nimport { HomeComponent } from \"./home/home.component\";\r\nimport { TokenInterceptorService } from \"./token-interceptor.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    ServicesComponent,\r\n    HomeComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FontAwesomeModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    AuthGuard,\r\n    ServicesService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, Router } from \"@angular/router\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private _authService: AuthService, private _router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    if (this._authService.loggedIn()) {\r\n      return true;\r\n    } else {\r\n      this._router.navigate([\"/login\"]);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AuthService {\r\n  private _registerUrl = \"/api/register\";\r\n  private _loginUrl = \"/api/login\";\r\n  constructor(private http: HttpClient, private _router: Router) {}\r\n\r\n  registerUser(user) {\r\n    return this.http.post<any>(this._registerUrl, user);\r\n  }\r\n\r\n  loginUser(user) {\r\n    return this.http.post<any>(this._loginUrl, user);\r\n  }\r\n\r\n  loggedIn() {\r\n    return !!localStorage.getItem(\"token\");\r\n  }\r\n\r\n  logoutUser() {\r\n    localStorage.removeItem(\"token\");\r\n    this._router.navigate([\"/\"]);\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(\"token\");\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  faAngular,\r\n  faVuejs,\r\n  faReact,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n@Component({\r\n  selector: \"app-home\",\r\n  templateUrl: \"./home.component.html\",\r\n  styleUrls: [\"./home.component.css\"],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  faAngular = faAngular;\r\n  faVuejs = faVuejs;\r\n  faReact = faReact;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\r\n  <h1 class=\"display-4\">Services</h1>\r\n  <p class=\"lead\">\r\n    Hier können sie das gewünschte Servicepaket auswählen.\r\n  </p>\r\n</div>\r\n\r\n<div class=\"container\">\r\n  <div class=\"card-deck mb-3 text-center\">\r\n    <div class=\"card mb-4 box-shadow\">\r\n      <div class=\"card-header\">\r\n        <h4 class=\"my-0 font-weight-normal\">Angular Projekt</h4>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <fa-icon\r\n          [icon]=\"faAngular\"\r\n          size=\"6x\"\r\n          [styles]=\"{ color: '#b52e31' }\"\r\n        ></fa-icon>\r\n        <h1 class=\"card-title pricing-card-title\">\r\n          €0 <small class=\"text-muted\">/ Stunde</small>\r\n        </h1>\r\n        <button type=\"button\" class=\"btn btn-lg btn-block btn-primary\">\r\n          Kaufen\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"card mb-4 box-shadow\">\r\n      <div class=\"card-header\">\r\n        <h4 class=\"my-0 font-weight-normal\">React Projekt</h4>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <fa-icon\r\n          [icon]=\"faReact\"\r\n          size=\"6x\"\r\n          [styles]=\"{ color: '#61DBFB' }\"\r\n        ></fa-icon>\r\n        <h1 class=\"card-title pricing-card-title\">\r\n          €0 <small class=\"text-muted\">/ Stunde</small>\r\n        </h1>\r\n        <button type=\"button\" class=\"btn btn-lg btn-block btn-primary\">\r\n          Kaufen\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"card mb-4 box-shadow\">\r\n      <div class=\"card-header\">\r\n        <h4 class=\"my-0 font-weight-normal\">Vue Projekt</h4>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <fa-icon\r\n          [icon]=\"faVuejs\"\r\n          size=\"6x\"\r\n          [styles]=\"{ color: '#41B883' }\"\r\n        ></fa-icon>\r\n        <h1 class=\"card-title pricing-card-title\">\r\n          €0 <small class=\"text-muted\">/ Stunde</small>\r\n        </h1>\r\n        <button type=\"button\" class=\"btn btn-lg btn-block btn-primary\">\r\n          Kaufen\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { AuthService } from \"./../auth.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.css\"]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginUserData = {\r\n    email: null,\r\n    password: null\r\n  };\r\n\r\n  constructor(private _auth: AuthService, private _router: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  loginUser() {\r\n    this._auth.loginUser(this.loginUserData).subscribe(\r\n      res => {\r\n        localStorage.setItem(\"token\", res.token);\r\n        this._router.navigate([\"/services\"]);\r\n      },\r\n      err => console.log(err)\r\n    );\r\n  }\r\n}\r\n","<div class=\"row pt-5\">\r\n  <div class=\"col-md-6 mx-auto\">\r\n    <div class=\"card rounded-0\">\r\n      <div class=\"card-header\">\r\n        <h3 class=\"mb-0\">Login</h3>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form class=\"form\">\r\n          <div class=\"form-group\">\r\n            <label for=\"\">Email</label>\r\n            <input\r\n              [(ngModel)]=\"loginUserData.email\"\r\n              name=\"email\"\r\n              type=\"text\"\r\n              class=\"form-control rounded-0\"\r\n              required\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"\">Password</label>\r\n            <input\r\n              [(ngModel)]=\"loginUserData.password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              class=\"form-control rounded-0\"\r\n              required\r\n            />\r\n          </div>\r\n          <button\r\n            (click)=\"loginUser()\"\r\n            type=\"button\"\r\n            class=\"btn btn-success float-right\"\r\n          >\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { AuthService } from \"../auth.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-register\",\r\n  templateUrl: \"./register.component.html\",\r\n  styleUrls: [\"./register.component.css\"]\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerUserData = {\r\n    email: null,\r\n    password: null\r\n  };\r\n  constructor(private _auth: AuthService, private _router: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  registerUser() {\r\n    this._auth.registerUser(this.registerUserData).subscribe(\r\n      res => {\r\n        localStorage.setItem(\"token\", res.token);\r\n        this._router.navigate([\"/services\"]);\r\n      },\r\n      err => console.log(err)\r\n    );\r\n  }\r\n}\r\n","<div class=\"row pt-5\">\r\n  <div class=\"col-md-6 mx-auto\">\r\n    <div class=\"card rounded-0\">\r\n      <div class=\"card-header\">\r\n        <h3 class=\"mb-0\">Register</h3>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form class=\"form\">\r\n          <div class=\"form-group\">\r\n            <label for=\"\">Email</label>\r\n            <input\r\n              [(ngModel)]=\"registerUserData.email\"\r\n              name=\"email\"\r\n              type=\"text\"\r\n              class=\"form-control rounded-0\"\r\n              required\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"\">Password</label>\r\n            <input\r\n              [(ngModel)]=\"registerUserData.password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              class=\"form-control rounded-0\"\r\n              required\r\n            />\r\n          </div>\r\n          <button\r\n            (click)=\"registerUser()\"\r\n            type=\"button\"\r\n            class=\"btn btn-primary float-right\"\r\n          >\r\n            Register\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ServicesService {\r\n  private _serviceUrl = \"/api/services\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getServices() {\r\n    return this.http.get<any>(this._serviceUrl);\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { ServicesService } from \"../services.service\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-services\",\r\n  templateUrl: \"./services.component.html\",\r\n  styleUrls: [\"./services.component.css\"]\r\n})\r\nexport class ServicesComponent implements OnInit {\r\n  services = [];\r\n\r\n  constructor(\r\n    private _serviceService: ServicesService,\r\n    private _router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this._serviceService.getServices().subscribe(\r\n      res => (this.services = res),\r\n      err => {\r\n        if (err instanceof HttpErrorResponse) {\r\n          if (err.status === 401) {\r\n            this._router.navigate([\"/login\"]);\r\n          }\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"row mt-5\">\r\n  <div class=\"col-md-4 mb-3\" *ngFor=\"let service of services\">\r\n    <div class=\"card text-center\">\r\n      <div class=\"card-body\">\r\n        <h5 class=\"card-title\">{{ service.name }}</h5>\r\n        <p class=\"card-text\">{{ service.description }}</p>\r\n        <a href=\"#\" class=\"btn btn-primary\">Buy service</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable, Injector } from \"@angular/core\";\r\nimport { HttpInterceptor } from \"@angular/common/http\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n  constructor(private injector: Injector) {}\r\n\r\n  intercept(req, next) {\r\n    let authService = this.injector.get(AuthService);\r\n    let tokenizedReq = req.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${authService.getToken()}`\r\n      }\r\n    });\r\n    return next.handle(tokenizedReq);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}